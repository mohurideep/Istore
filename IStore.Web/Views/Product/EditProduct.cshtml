@model EditProductViewModel

@{
    ViewData["Title"] = "EditProduct";
    var imageURL = !string.IsNullOrEmpty(Model.ImageURL) ? Model.ImageURL :"/images/Placeholder_No_Image.jpg";
}

<form id="EditProductForm">
    <h1>Edit Products</h1>
    <input type="hidden" name="ID" value="@Model.ID" />
    <div class="form-group">
            <label>Categry</label>
            <select class="form-control" name="CategoryID">
                @foreach (var category in Model.AvailableCategories)
                {
                    var selected = category.ID == Model.CategoryID ;

                    if(selected)
                    {
                        <option value="@category.ID" selected>@category.Name</option>
                    }
                    else
                    {
                        <option value="@category.ID" >@category.Name</option>
                    }
                    
                }
            </select>
        </div>
    <div class="row">
        <div class="col-md-8">

            <div class="form-group">
                <label>Name<span class="text-danger">*</span></label>
                <input class="form-control" type="text" name="Name" value="@Model.Name" />
            </div>
            <div class="form-group">
                <label>Description<span class="text-danger">*</span></label>
                <input class="form-control" type="text" name="Description" value="@Model.Description" />
            </div>
            <div class="form-group">
                <label>Price<span class="text-danger">*</span></label>
                <input class="form-control" type="text" name="Price" value="@Model.Price" />
            </div>
            <div class="form-group">
                <label>Image</label>
                <input id="imageURL" name="imageURL" type="hidden" value="@imageURL" />
                <input class="form-control" id="ImageUpload" name="Image" type="file" accept=".png, .jpg , .jpeg" />
            </div>

            <button class="btn" type="button" id="UpdateProductBtn">Update</button>
            <button class="btn" type="button" id="CancelProductBtn">Cancel</button>
        </div>
        <div class="col-md-4">
            <div class="thumb">
                <img id="ContentImage" class="img-thumbnail img-fluid" src="@imageURL" asp-for="@Model.ImageURL" />
            </div>
        </div>
    </div>
</form>

<script>
    $("#ImageUpload").change(function () {
        var element = this;
        var formdata = new FormData();
        var Files = element.files;

        for (var i = 0; i != Files.length; i++) {

            formdata.append("Files", Files[i]);
        }
        $.ajax({
            type: 'POST',
            url:'@Url.Action("UploadImage", "Shared")',
            data: formdata,
            contentType: false,
            processData: false
        })
            .done(function (response) {
                if (response.status == "success") {
                    $("#ContentImage").attr("src", response.imageURL);
                    $("#imageURL").val(response.imageURL);
                }
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });

    $("#EditProductForm").validate({
        rules: {
            Name: {
                required: true,
                minlength: 5,
                maxlength: 50
            },
            Description: {
                required: true,
                maxlength: 500
            },
            Price: {
                required: true,
                number: true
            }
        },
        messages: {
            Name: {
                required: "Name is Required",
                minlength: "MinLength is 5",
                maxlength: "MaxLength is 50"
            },
            Description: {
                required: "Description is Required",
                maxlength: "MaxLength is 500"
            },
            Price: {
                required: "Price is Required",
                number: "Please Enter Valid Number"
            }
        }
    });

    $("#UpdateProductBtn").click(function () {
        if ($("#EditProductForm").valid()) {
            $.ajax({
            type: 'POST',
            url:'@Url.Action("UpdateProduct", "Product")',
            data: $("#EditProductForm").serialize()
            })
            .done(function (response) {
            Swal.fire('Good job!', 'Prduct Added Succesfully!', 'success')
            $("#EditProductForm").html("");
            $("#productTableIndex").html(response);
            focusAction("productTableIndex");

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...Internal server',
                    text: 'Please Try After SomeTime!'
                })
            })
        }
        else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please Enter All the Required Feilds!'
            })
        }
    });

    $("#CancelProductBtn").click(function () {
        $("#ProductIndex").html("");
        focusAction("productTableIndex");
    });
</script>