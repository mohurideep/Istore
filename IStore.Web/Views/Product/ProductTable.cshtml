@model ProductViewModel

<div >
    <h1>ProductTable</h1>
    <br />
    <table id="producttableid" class="table table-striped">
        <thead>
            <tr>
                <th>
                    Category
                </th>
                <th>
                    Id
                </th>
                <th>
                    Name
                </th>
                <th>
                    Description
                </th>
                <th>
                    Price
                </th>
                <th>
                    Image
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Product)
            {
                <tr>
                    <td>
                        @item.Category.Name
                    </td>
                    <td>
                        @item.ID
                    </td>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @item.Description
                    </td>
                    <td>
                        @item.Price
                    </td>
                    <td>
                        <img src="@item.ImageURL" alt="Image" height="50" width="50">
                    </td>
                    <td>
                        <button type="button" class="Editbtn" data-id="@item.ID">Edit</button>

                        <button type="button" class="Deletebtn" data-id="@item.ID">Delete</button>

                        <button type="button" class="AddTocart" data-id="@item.ID">Add To Cart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        @if (Model.pager != null)
        {
            if (Model.pager.CurrentPage > 1)
            {
                <button class="pageButtons" data-id="@(Model.pager.CurrentPage-1)"> Previous</button>
                <button class="pageButtons" data-id="1"> First</button>
            }
            for (int i = 1; i <= Model.pager.EndPage; i++)
            {
                var activeClass = Model.pager.CurrentPage == i ? "active bg-info" : string.Empty;

                <button class="@activeClass pageButtons" data-id="@i"> @i</button>
            }
            if (Model.pager.CurrentPage < Model.pager.TotalPages)
            {
                <button class="pageButtons" data-id="@(Model.pager.CurrentPage+1)"> Next</button>
                <button class="pageButtons" data-id="@Model.pager.EndPage"> Last</button>
            }

        }
    </div>
</div>

<script>
    $(".Editbtn").click(function () {
        $.ajax({
            url:'@Url.Action("EditProduct", "Product")',
            data:
            {
                id: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                focusAction("ProductIndex");
                $("#ProductIndex").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            })
    });
    $(".Deletebtn").click(function () {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                        url:'@Url.Action("DeleteProduct", "Product")',
                        data:
                        {
                            id: $(this).attr('data-id')
                        }
                })
                .done(function (response) {
                    $("#productTableIndex").html(response);
                    Swal.fire(
                        'Deleted!',
                        'Your file has been deleted.',
                        'success'
                    )

                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Fail");
                })
            }
        })

    });

    var Products = [];
    $(".AddTocart").click(function () {

        var ProductID = $(this).attr('data-id');
        Products.push(ProductID);
        $.cookie("CartProducts", Products.join("-"));
        alert("Product Added to Cart");

    });

    $(".pageButtons").click(function () {
        $.ajax({
            url:'@Url.Action("ProductTable", "Product")',
            data:
            {
                search: "@Model.SearchItem",
                pageNo: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#productTableIndex").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            })
    });
</script>